package com.locdata.theatres.scraper;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Reader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Date;

import org.codehaus.jackson.JsonParseException;
import org.codehaus.jackson.map.JsonMappingException;
import org.codehaus.jackson.map.ObjectMapper;

import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.locdata.scraper.main.ScraperLogic;
import com.locdata.theatres.entity.ScotiaBankJson;
import com.locdata.theatres.entity.ScotiaBankJson.Record;
import com.locdata.theatres.entity.ScotiaBankJson.TheatreDetails;


/*
 * Using ajax to fetch the theatre details page URL : view-source:https://cineplex.com/search-2015?search-query=Scotiabank+Theatre
 * 
 * Need manual copy pasting of values to excel sheet
 */

public class Theatres_ScotiaBank_LocData {
	
	private static String readAll(Reader rd) throws IOException {
	    StringBuilder sb = new StringBuilder();
	    int cp;
	    while ((cp = rd.read()) != -1) {
	      sb.append((char) cp);
	    }
	    return sb.toString();
	  }
public static void main(String args[]) throws IOException, InterruptedException {
		
		URL url = new URL("https://search.cineplex.com/api/Search/Get?query=Scotiabank%20Theatre&from=summary&[0].Count=1&[0].Type=Value&[0].Name=Language&[0].Value=English&lang=en-us");
	      JsonParser jsonParser = new JsonParser();
	      JsonObject jsonObject = (JsonObject)jsonParser.parse(new InputStreamReader(url.openStream(), Charset.forName("UTF-8")));
	      String str = jsonObject.get("Summary").toString();
	      String details = str.substring(str.indexOf("TheatreDetails"),str.indexOf("}}]", str.indexOf(str))).toString();
	      System.out.println(details);
}

private void fireGeoCodeApi(String scotiaurl){

	try{
		
		URL url = new URL(scotiaurl);
		HttpURLConnection conn = (HttpURLConnection) url.openConnection();
		conn.setRequestMethod("GET");
		conn.setRequestProperty("Accept", "application/json");
		StringBuilder builder = new StringBuilder();
				
		if (conn.getResponseCode() != 200) {
			throw new RuntimeException("Failed : HTTP error code : "
					+ conn.getResponseCode());
		}

		BufferedReader br = new BufferedReader(new InputStreamReader(
				(conn.getInputStream())));

			String output;
			System.out.println("Output from Server .... \n");
			while ((output = br.readLine()) != null) {
				builder.append(output);
			}

			conn.disconnect();
			String scotiaApiResponse = builder.toString();
			extractJsonEntities(scotiaApiResponse);
			
	}catch(MalformedURLException malformedexception) {
		
		System.out.println(malformedexception.getMessage() + "On Error " + ScraperLogic.class.getSimpleName() + " ::: request URL is not a HTTP or HTTPS URL");
        
	}catch (IOException e) {
		
        System.out.println(e.getMessage() + "On Error " + ScraperLogic.class.getSimpleName() + " ::: IOException on URL fetch" + new Date().toString());
	}
}

private void extractJsonEntities(String jsonResponse) throws JsonParseException, JsonMappingException, IOException{
	
	ObjectMapper mapper = new ObjectMapper();
	
	/*
	 * Scotia Bank API
	 */
	
	ScotiaBankJson scotiaResponse = mapper.readValue(jsonResponse, ScotiaBankJson.class);
	
	
		
		/*
		 * Result could have just one array value 
		 */
		TheatreDetails result =  scotiaResponse.getTheatreDetails();
		/*
		 * Writing data from json to pojo 
		 */
		 
		ArrayList<Record> record = result.getRecords();
		
		for(Record r : record){
			System.out.println(r.getAllMeta().getTheatreAddress());
		}
		        	        
		
}