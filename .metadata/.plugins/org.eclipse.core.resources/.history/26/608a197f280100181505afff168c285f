package com.locdata.google.api.sheetsWriter;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashSet;
import java.util.List;

import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import com.locdata.geocoding.google.service.GeoCodeEntityCarrierToExcelWriter;

public class SheetLocalWriter {
	
	private static final String rootFilePath = "/Users/krichandran/Desktop/MasterData - Excel/Theatres";
	public static void writeXLSXFile(String fileName,LinkedHashSet<GeoCodeEntityCarrierToExcelWriter> masterData) throws IOException {
		
		String excelFileName = rootFilePath.concat(fileName);//name of excel file
		Date currentDate = new Date();
		String sheetName = currentDate.getMonth()+"/"+currentDate.getDay()+"/"+currentDate.getYear();//name of sheet

		XSSFWorkbook wb = new XSSFWorkbook();
		XSSFSheet sheet = wb.createSheet(sheetName) ;
		List<GeoCodeEntityCarrierToExcelWriter> masterlist = new ArrayList<GeoCodeEntityCarrierToExcelWriter>(masterData);

		//iterating r number of rows
		for (int r=0;r < masterlist.size(); r++ )
		{
			XSSFRow row = sheet.createRow(r);

			//iterating c number of columns
			for (int c=0;c < 13; c++ )
			{
				XSSFCell cell = row.createCell(c);
	
				if(c == 0) cell.setCellValue(masterlist.get(r).getAddress());
				else if(c == 1) cell.setCellValue(masterlist.get(r).getCity());
				else if(c == 2) cell.setCellValue(masterlist.get(r).getCountry());
				else cell.setCellValue(masterlist.get(r).getLocationtype());
			}
		}

		FileOutputStream fileOut = new FileOutputStream(excelFileName);

		//write this workbook to an Outputstream.
		wb.write(fileOut);
		fileOut.flush();
		fileOut.close();
	}
}
