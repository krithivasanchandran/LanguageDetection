package com.locdata.theatres.scraper;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import com.locdata.scraper.main.ScraperLogic;

/*
 * Car Mike Cinemas will be rebranded to AMC Theatres Now
 * 
 * 
 */

public class Theatres_CarMike_AggData {

	static List<String> urlVisits = new ArrayList<String>();
	static Set<String> address = new HashSet<String>();

	public static void main(String args[]) throws IOException {

		String rootUrl = "https://www.amctheatres.com";

		Document doc = ScraperLogic.Scraper.fetchHtmlContents("https://www.amctheatres.com/carmike");

		if(doc == null){
			System.out.println(" The link is broken ");
            throw new IllegalArgumentException("Document !!! urls is null ::: Program Exited " + Theatres_CarMike_AggData.class.getSimpleName());
		}
		
		Elements parentLocation = doc.select("article#locations-list");

		for (Element e : parentLocation) {

			Elements t = e.select(".row");

			for (Element ar : t) {
				Elements loc = ar.select("div.ColumnLinkList-col.cleared-col.col-md-3.col-sm-3.col-xs-12 > ul");
				Elements li = loc.select("li");

				li.forEach((s) -> System.out.println(s.text()));

				Elements getUrls = loc.select("li > a");

				getUrls.forEach((s) -> urlVisits.add(rootUrl.concat(s.attr("href"))));

			}
		}

		if (urlVisits.size() > 0) {
			urlVisits.forEach((url -> {

				try {
					Document visitPage = Jsoup.connect(url)
							.userAgent(
									"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.108 Safari/537.36")
							.timeout(1000000).get();

					Elements pin = visitPage.select(".SiteContent");

					for (Element e : pin) {

						Elements getplace = e.select("p.Headline--sub");

						System.out.println(" website ==> " + url);

						getplace.forEach((p_12) -> {
							System.out.println(" -----> " + p_12.text());
							address.add(p_12.text());
						});
					}

				} catch (Exception e1) {

					System.out.println(e1.getMessage());
					throw new IllegalArgumentException();
				}
			}));
		}
		address.forEach((i) -> System.out.println(" ====> " + i));
	}
}