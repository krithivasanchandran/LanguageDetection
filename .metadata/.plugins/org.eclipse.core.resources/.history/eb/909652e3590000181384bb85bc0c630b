package com.locdata.geocoding.google.service;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Date;

import org.apache.poi.util.IOUtils;

import com.locdata.scraper.main.ScraperLogic;

/*
 * https://developers.google.com/maps/documentation/geocoding/intro
 * URLs must be properly encoded to be valid and are limited to 8192 characters for all web services. 
 * Be aware of this limit when constructing your URLs.
 * Note that different browsers, proxies, and servers may have different URL character limits as well.
 * 
 * Input -> address , api key
 * 
 */

public class GeoCodingApi {
	
	private static final String geocoding = "https://maps.googleapis.com/maps/api/geocode/json?address=";
	
	private static final String secureapikey = "&key=AIzaSyCdP9jGPN2qTmxtpV9rBkJI2zPpRsp2E-c";
	
	private String constructgeourl;
	
	GeoCodingApi(String address){
		if(address.length() < 8192){
			address = address.replaceAll("//s+", "+");
			this.constructgeourl = geocoding.concat(address).concat(secureapikey);
			System.out.println("Constructed geo code API =====> " + this.constructgeourl);
		}
	}
	
	
	private String fireGeoCodeApi(){

		try{
			
			URL url = new URL(this.constructgeourl);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
		
			ByteArrayOutputStream output = new ByteArrayOutputStream(1024);
			IOUtils.copy(conn.getInputStream(), output);
			output.close();
			return output.toString();
			
		}catch(MalformedURLException malformedexception) {
			
			System.out.println(malformedexception.getMessage() + "On Error " + ScraperLogic.class.getSimpleName() + " ::: request URL is not a HTTP or HTTPS URL");
            
		}catch (IOException e) {
			
            System.out.println(e.getMessage() + "On Error " + ScraperLogic.class.getSimpleName() + " ::: IOException on URL fetch" + new Date().toString());
		}
		return null;
	}

	
}
