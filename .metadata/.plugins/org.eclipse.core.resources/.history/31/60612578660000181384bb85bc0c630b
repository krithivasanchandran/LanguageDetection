package com.locdata.theatres.scraper; 

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.ListIterator;

import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.locdata.geocoding.google.service.GeoCodingApi;
import com.locdata.geocoding.google.service.GeoCodingStatusCodes;
import com.locdata.scraper.main.ScraperLogic;
import com.locdata.theatres.entity.EntityTheatre;
import com.locdata.utils.common.CommonUtils;

public class Theatres_AMCEntertainment_AggData {

	static List<String> theatres = new ArrayList<String>();
	static List<EntityTheatre> address = new ArrayList<EntityTheatre>();

	public static void main(String args[]) throws IOException {

		String parentUrl = "https://www.amctheatres.com";

		Document doc = ScraperLogic.Scraper.fetchHtmlContents("https://www.amctheatres.com/movie-theatres");

		CommonUtils.checkDoc(doc,Theatres_AMCEntertainment_AggData.class);

			
		Element t = doc.getElementById("tabs-tabs");
		Elements t_1 = t.select(".tab-content");

		for (Element r : t_1) {

			Elements re = r.select(".Link.Link--arrow.Link--reversed.Link--arrow--txt--tiny.txt--tiny");

			for (Element k : re) {
				System.out.println(parentUrl.concat(k.attr("href")));
				theatres.add(parentUrl.concat(k.attr("href")));
				System.out.println(k.text());
				break;
				// address.add(new EntityTheatre().setCountyName(k.text()));
			}
			break;
		}

		ListIterator<String> itr = theatres.listIterator();

		while (itr.hasNext()) {

			Document doc_1 = ScraperLogic.Scraper.fetchHtmlContents(itr.next());

			CommonUtils.checkDoc(doc_1,Theatres_AMCEntertainment_AggData.class);


			Elements tr = doc_1.select(".TheatreInfo");
			System.out.println(tr.size());
			EntityTheatre entity = null;

			for (Element e : tr) {
				entity = new EntityTheatre();
				System.out.println(" -------->>>>>>>>> " + e.select(".Link-text.Headline--h3").text());
				entity.setTheatreStoreName(e.select(".Link-text.Headline--h3").text());
				System.out.println(" ==============> Theatre Website " + e.select("a").attr("href"));
				entity.setTheatreWebsite(parentUrl.concat(e.select("a").attr("href")));
				System.out.println(
						" ==============> address " + e.select(".TheatreInfo-address.Headline--eyebrow").text());
				entity.setAddress(e.select(".TheatreInfo-address.Headline--eyebrow").text());
				
				GeoCodingApi geo = new GeoCodingApi(entity.getAddress());
				//System.out.println(geo.fireGeoCodeApi());
				
		        	  JsonParser jp = new JsonParser(); //from gson
				      JsonElement root = jp.parse(geo.fireGeoCodeApi()); //Convert the input stream to a json element
				      	System.out.println(" Root is JSONARRAY =========> " + root.isJsonArray());
				      	System.out.println(" Root is JSONObject ------------> " + root.isJsonObject());
				      	System.out.println(" Root is JSON Null ------------> " + root.isJsonNull());
				      	System.out.println(" Root is JSON Primitive ------------> " + root.isJsonPrimitive());

				         if (root instanceof JsonObject) {
				        	 	
				        	    JsonObject  jobject =  root.getAsJsonObject();
				        	    
				        	    	
				        	        System.out.println( " formatted Json response " + jobject.get("formatted_address").toString());
				        	        System.out.println( " latitude :: " + jobject.get("lat").toString());
				        	        System.out.println( " longitude :: " + jobject.get("long").toString());
				        	        System.out.println( " location_type :: " + jobject.get("location_type").toString());
				        	        System.out.println(" Place Id ::: " + jobject.get("place_id").toString());
				        	        System.out.println(" Status ::: " + jobject.get("status").toString());
				        	        
				        	        if(GeoCodingStatusCodes.getErrorCodes().contains(jobject.get("status").toString().trim())){
				        	        	String str = jobject.get("status").toString().trim();
				        	        	System.out.println( " Ennum response  " + GeoCodingStatusCodes.valueOf(str));
				        	        }
				        	 }
				System.exit(0);
			//	address.add(entity);
			}
		}
		System.out.println("Fetching the details");
		System.out.println(Arrays.toString(address.toArray()));
	}
}